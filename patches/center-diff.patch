diff --git a/config.def.h b/config.def.h
index 8847e58..aef51c8 100644
--- a/config.def.h
+++ b/config.def.h
@@ -13,6 +13,7 @@ static const float focuscolor[]            = COLOR(0x005577ff);
 static const float urgentcolor[]           = COLOR(0xff0000ff);
 /* This conforms to the xdg-protocol. Set the alpha to zero to restore the old behavior */
 static const float fullscreen_bg[]         = {0.1f, 0.1f, 0.1f, 1.0f}; /* You can also use glsl colors */
+static const int respect_monitor_reserved_area = 0;  /* 1 to monitor center while respecting the monitor's reserved area, 0 to monitor center */
 
 /* tagging - TAGCOUNT must be no greater than 31 */
 #define TAGCOUNT (9)
@@ -137,6 +138,7 @@ static const Key keys[] = {
 	{ MODKEY,                    XKB_KEY_space,      setlayout,      {0} },
 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_space,      togglefloating, {0} },
 	{ MODKEY,                    XKB_KEY_e,         togglefullscreen, {0} },
+	{ MODKEY,                    XKB_KEY_x,          movecenter,     {0} },
 	{ MODKEY,                    XKB_KEY_0,          view,           {.ui = ~0} },
 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_parenright, tag,            {.ui = ~0} },
 	{ MODKEY,                    XKB_KEY_comma,      focusmon,       {.i = WLR_DIRECTION_LEFT} },
diff --git a/dwl.c b/dwl.c
index bf763df..cd3a3ae 100644
--- a/dwl.c
+++ b/dwl.c
@@ -332,6 +332,8 @@ static void tagmon(const Arg *arg);
 static void tile(Monitor *m);
 static void togglefloating(const Arg *arg);
 static void togglefullscreen(const Arg *arg);
+static void _movecenter(Client *c, int interact);
+static void movecenter(const Arg *arg);
 static void toggletag(const Arg *arg);
 static void toggleview(const Arg *arg);
 static void unlocksession(struct wl_listener *listener, void *data);
@@ -1569,6 +1571,7 @@ mapnotify(struct wl_listener *listener, void *data)
 	Client *w, *c = wl_container_of(listener, c, map);
 	Monitor *m;
 	int i;
+	struct wlr_box b;
 
 	/* Create scene tree for this client and its border */
 	c->scene = client_surface(c)->data = wlr_scene_tree_create(layers[LyrTile]);
@@ -1608,6 +1611,13 @@ mapnotify(struct wl_listener *listener, void *data)
 	wl_list_insert(&clients, &c->link);
 	wl_list_insert(&fstack, &c->flink);
 
+	b = respect_monitor_reserved_area ? c->mon->w : c->mon->m;
+	if (c->isfloating || !c->mon->lt[c->mon->sellt]->arrange) {
+		/* client is floating or in floating layout */
+		c->geom.x = (b.width - c->geom.width) / 2 + b.x;
+		c->geom.y = (b.height - c->geom.height) / 2 + b.y;
+	}
+
 	/* Set initial monitor, tags, floating status, and focus:
 	 * we always consider floating, clients that have parent and thus
 	 * we set the same tags and monitor than its parent, if not
@@ -2240,6 +2250,10 @@ setmon(Client *c, Monitor *m, uint32_t newtags)
 		c->tags = newtags ? newtags : m->tagset[m->seltags]; /* assign tags of target monitor */
 		setfullscreen(c, c->isfullscreen); /* This will call arrange(c->mon) */
 		setfloating(c, c->isfloating);
+		if (c->isfloating || !c->mon->lt[c->mon->sellt]->arrange) {
+			/* client is floating or in floating layout */
+			_movecenter(c, 0);
+		}
 	}
 	focusclient(focustop(selmon), 1);
 }
@@ -2620,6 +2634,35 @@ togglefullscreen(const Arg *arg)
 		setfullscreen(sel, !sel->isfullscreen);
 }
 
+void
+_movecenter(Client *c, int interact)
+{
+	struct wlr_box b;
+
+	if (!c || !c->mon) {
+		return;
+	}
+
+	if (!c->isfloating) {
+		return;
+	}
+
+	b = respect_monitor_reserved_area ? c->mon->w : c->mon->m;
+	resize(c, (struct wlr_box){
+		.x = (b.width - c->geom.width) / 2 + b.x,
+		.y = (b.height - c->geom.height) / 2 + b.y,
+		.width = c->geom.width,
+		.height = c->geom.height,
+	}, interact);
+}
+
+void
+movecenter(const Arg *arg)
+{
+	Client *c = focustop(selmon);
+	_movecenter(c, 1);
+}
+
 void
 toggletag(const Arg *arg)
 {
