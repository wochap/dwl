From 4e55fab90be345c14a8d762e2247948724636a22 Mon Sep 17 00:00:00 2001
From: wochap <gean.marroquin@gmail.com>
Date: Mon, 11 Sep 2023 10:21:24 -0500
Subject: [PATCH 1/2] implement modes

---
 config.def.h | 19 +++++++++++++++++++
 dwl.c        | 46 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 65 insertions(+)

diff --git a/config.def.h b/config.def.h
index 1677f6f1..f8d5926f 100644
--- a/config.def.h
+++ b/config.def.h
@@ -7,6 +7,13 @@ static const float focuscolor[]            = {1.0, 0.0, 0.0, 1.0};
 /* To conform the xdg-protocol, set the alpha to zero to restore the old behavior */
 static const float fullscreen_bg[]         = {0.1, 0.1, 0.1, 1.0};
 
+enum {
+	BROWSER,
+};
+const char *modes_labels[] = {
+	"browser",
+};
+
 /* tagging - tagcount must be no greater than 31 */
 #define TAGCOUNT (9)
 static const int tagcount = TAGCOUNT;
@@ -144,6 +151,8 @@ static const Key keys[] = {
 	TAGKEYS(          XKB_KEY_9, XKB_KEY_parenleft,                  8),
 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Q,          quit,           {0} },
 
+	{ MODKEY,                    XKB_KEY_b,          entermode,      {.i = BROWSER} },
+
 	/* Ctrl-Alt-Backspace and Ctrl-Alt-Fx used to be handled by X server */
 	{ WLR_MODIFIER_CTRL|WLR_MODIFIER_ALT,XKB_KEY_Terminate_Server, quit, {0} },
 #define CHVT(n) { WLR_MODIFIER_CTRL|WLR_MODIFIER_ALT,XKB_KEY_XF86Switch_VT_##n, chvt, {.ui = (n)} }
@@ -151,6 +160,16 @@ static const Key keys[] = {
 	CHVT(7), CHVT(8), CHVT(9), CHVT(10), CHVT(11), CHVT(12),
 };
 
+static const Modekey modekeys[] = {
+	{ BROWSER, { 0, XKB_KEY_f, spawn, SHCMD("firefox") } },
+	{ BROWSER, { 0, XKB_KEY_f, entermode, {.i = NORMAL} } },
+	{ BROWSER, { 0, XKB_KEY_b, spawn, SHCMD("brave") } },
+	{ BROWSER, { 0, XKB_KEY_b, entermode, {.i = NORMAL} } },
+	{ BROWSER, { 0, XKB_KEY_g, spawn, SHCMD("google-chrome-stable") } },
+	{ BROWSER, { 0, XKB_KEY_g, entermode, {.i = NORMAL} } },
+	{ BROWSER, { 0, XKB_KEY_Escape, entermode, {.i = NORMAL} } },
+};
+
 static const Button buttons[] = {
 	{ MODKEY, BTN_LEFT,   moveresize,     {.ui = CurMove} },
 	{ MODKEY, BTN_MIDDLE, togglefloating, {0} },
diff --git a/dwl.c b/dwl.c
index 4ff5c37f..a0483a13 100644
--- a/dwl.c
+++ b/dwl.c
@@ -135,6 +135,11 @@ typedef struct {
 	const Arg arg;
 } Key;
 
+typedef struct {
+	int mode_index;
+	Key key;
+} Modekey;
+
 typedef struct {
 	struct wl_list link;
 	struct wlr_keyboard *wlr_keyboard;
@@ -264,6 +269,7 @@ static void handlesig(int signo);
 static void incnmaster(const Arg *arg);
 static void inputdevice(struct wl_listener *listener, void *data);
 static int keybinding(uint32_t mods, xkb_keysym_t sym);
+static int modekeybinding(uint32_t mods, xkb_keysym_t sym);
 static void keypress(struct wl_listener *listener, void *data);
 static void keypressmod(struct wl_listener *listener, void *data);
 static int keyrepeat(void *data);
@@ -318,6 +324,7 @@ static Monitor *xytomon(double x, double y);
 static void xytonode(double x, double y, struct wlr_surface **psurface,
 		Client **pc, LayerSurface **pl, double *nx, double *ny);
 static void zoom(const Arg *arg);
+static void entermode(const Arg *arg);
 
 /* variables */
 static const char broken[] = "broken";
@@ -367,6 +374,9 @@ static struct wlr_box sgeom;
 static struct wl_list mons;
 static Monitor *selmon;
 
+static const int NORMAL = -1;
+static int active_mode_index = NORMAL;
+
 /* global event handlers */
 static struct wl_listener cursor_axis = {.notify = axisnotify};
 static struct wl_listener cursor_button = {.notify = buttonpress};
@@ -1399,6 +1409,11 @@ keybinding(uint32_t mods, xkb_keysym_t sym)
 	 */
 	int handled = 0;
 	const Key *k;
+
+	if (active_mode_index >= 0) {
+		return modekeybinding(mods, sym);
+	}
+
 	for (k = keys; k < END(keys); k++) {
 		if (CLEANMASK(mods) == CLEANMASK(k->mod) &&
 				sym == k->keysym && k->func) {
@@ -1409,6 +1424,29 @@ keybinding(uint32_t mods, xkb_keysym_t sym)
 	return handled;
 }
 
+int
+modekeybinding(uint32_t mods, xkb_keysym_t sym)
+{
+	int handled = 0;
+	const Modekey *mk;
+	const Key *k;
+
+	for (mk = modekeys; mk < END(modekeys); mk++) {
+		if (active_mode_index != mk->mode_index) {
+			continue;
+		}
+
+		k = &mk->key;
+		if (CLEANMASK(mods) == CLEANMASK(k->mod) &&
+				sym == k->keysym && k->func) {
+			k->func(&k->arg);
+			handled = 1;
+		}
+	}
+
+	return handled;
+}
+
 void
 keypress(struct wl_listener *listener, void *data)
 {
@@ -1881,6 +1919,7 @@ printstatus(void)
 		printf("%s tags %u %u %u %u\n", m->wlr_output->name, occ, m->tagset[m->seltags],
 				sel, urg);
 		printf("%s layout %s\n", m->wlr_output->name, m->ltsymbol);
+		printf("%s mode %s\n", m->wlr_output->name, modes_labels[active_mode_index] ? modes_labels[active_mode_index] : "");
 	}
 	fflush(stdout);
 }
@@ -2683,6 +2722,13 @@ zoom(const Arg *arg)
 	arrange(selmon);
 }
 
+void
+entermode(const Arg *arg)
+{
+	active_mode_index = arg->i;
+	printstatus();
+}
+
 #ifdef XWAYLAND
 void
 activatex11(struct wl_listener *listener, void *data)

From 5d3af6511ff19a14a0e6d8358018b4021952afd8 Mon Sep 17 00:00:00 2001
From: wochap <gean.marroquin@gmail.com>
Date: Mon, 11 Sep 2023 10:29:05 -0500
Subject: [PATCH 2/2] docs

---
 config.def.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/config.def.h b/config.def.h
index f8d5926f..95a0f034 100644
--- a/config.def.h
+++ b/config.def.h
@@ -161,6 +161,7 @@ static const Key keys[] = {
 };
 
 static const Modekey modekeys[] = {
+	/* mode      modifier                  key                 function        argument */
 	{ BROWSER, { 0, XKB_KEY_f, spawn, SHCMD("firefox") } },
 	{ BROWSER, { 0, XKB_KEY_f, entermode, {.i = NORMAL} } },
 	{ BROWSER, { 0, XKB_KEY_b, spawn, SHCMD("brave") } },
